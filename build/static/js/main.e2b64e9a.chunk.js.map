{"version":3,"sources":["context/ThemeContext.js","components/Header.jsx","components/Loader.jsx","components/Search.jsx","images/noPokemon.jpg","components/Character.jsx","components/Characters.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","Header","useContext","darkMode","setDarkMode","className","type","onClick","Loader","Search","searchTerm","searchInput","handleSearch","id","placeholder","value","onChange","ref","htmlFor","Character","searchResults","isCharacterInFavorites","handleFavorite","map","poke","i","src","sprites","front_default","alt","name","types","length","noPokemon","initialState","favorites","favoriteReducer","state","action","payload","filter","favorite","Characters","useState","setResult","pokemons","setPokemons","load","setLoad","useReducer","myfavorites","dispatch","setSearchTerm","setSearchResults","useRef","useCallback","current","useEffect","results","person","toLowerCase","includes","arr","fetch","then","response","json","data","item","url","allpokemon","push","setTimeout","find","character","key","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2b64e9a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ThemeContext = React.createContext(null);\r\n\r\nexport default ThemeContext;","// import {useContext} from 'react'\r\n// import ThemeContext from '../context/ThemeContext'\r\n\r\n// const Header = (props) => {\r\n//   // const [darkMode, setDarkMode] = useState(false);\r\n\r\n//   // const handleClick = () => {\r\n//   //   setDarkMode(!darkMode);\r\n//   // }\r\n\r\n//   return (\r\n//     <div className=\"Header\">\r\n//       <h1>ReactHooks</h1>\r\n//       <button type=\"button\" onClick={()=>props.onClick()}>\r\n//         {props.darkMode ? \"Dark Mode\" : \"Light Mode\"}\r\n//       </button>\r\n//       {/* <button type=\"button\" onClick={handleClick}>{darkMode ? 'Dark Mode' : 'Light Mode'}</button> */}\r\n//       {/* <button type=\"button\" onClick={() => setDarkMode (!darkMode)}>{darkMode ? 'Dark Mode 2' : 'Light Mode 2'}</button> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Header;\r\n\r\nimport React, { useContext } from 'react'\r\nimport ThemeContext from '../context/ThemeContext';\r\nexport default function Header() {\r\n    const {darkMode, setDarkMode} = useContext(ThemeContext);\r\n    const handleClick = () => {\r\n        setDarkMode(!darkMode);\r\n    }\r\n\r\n    return (\r\n        <div className={ `App-header ${darkMode? \"HeaderDark\": \"HeaderLight\"} `} >\r\n            <h1>Poke API</h1>\r\n            <div className=\"button\">\r\n              <button type=\"button\" onClick={handleClick}>{darkMode ? 'Dark ðŸŒ‘' : 'Light ðŸŒž'}</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import '../css/Loader.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n    <div className=\"loadingio-spinner-bean-eater-elz00pqdd3u\"><div className=\"ldio-2mentkvc9re\">\r\n    <div><div></div><div></div><div></div></div><div><div></div><div></div><div></div></div>\r\n    </div></div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import  React  from 'react';\r\nimport '../css/Search.css';\r\n\r\n\r\n  const Search = ({searchTerm, searchInput, handleSearch}) => {\r\n    return (\r\n      <div className=\"search\">\r\n      <span>\r\n        <input className=\"searchTerm\" id=\"element\" type=\"text\" placeholder=\"Busca tu pokemon!\"  value={searchTerm}\r\n          onChange={handleSearch} ref={searchInput}/>\r\n          <label htmlFor=\"element\">PokemÃ³n</label>\r\n      </span>\r\n\r\n\r\n    </div>\r\n    );\r\n  }\r\n\r\n\r\n  export default Search;","export default __webpack_public_path__ + \"static/media/noPokemon.6284722a.jpg\";","import noPokemon from '../images/noPokemon.jpg'\r\n\r\nconst Character = ({searchResults, isCharacterInFavorites,  handleFavorite}) => {\r\n\r\n    return (\r\n      <div className=\"Characters\">\r\n\r\n      {searchResults.map((poke, i) => (\r\n      <div id={poke.id} key={poke.id} >\r\n        <div className='Character'>\r\n          <img  src={poke.sprites.front_default} alt='pokemon' />\r\n          <div>\r\n            <p className=\"Character--name\">{poke.name}</p>\r\n            <p className=\"Character--type\">Type: {poke.types[0].type.name}</p>\r\n          </div>\r\n          <button \r\n            className={`Character--buttonFav ${!!isCharacterInFavorites(poke)? \"btn-delete\": \"btn-add\"} `} \r\n            type=\"button\"\r\n            onClick={() => handleFavorite(poke)} \r\n            >\r\n              {!!isCharacterInFavorites(poke) ? 'Eliminar de favoritos' : 'Agregar a favoritos'}\r\n          </button>\r\n          </div>\r\n      </div>\r\n      ))}\r\n      {/* MOSTRAR CUANDO NO HAY RESULTADOS */}\r\n      {searchResults.length===0 ?\r\n      <div className=\"no-found\">\r\n        <article>\r\n          <p>Don't found Pokemon :(</p>\r\n        </article>\r\n        <img src={noPokemon} alt=\"Pokemon no encontrado\"/>\r\n      </div>\r\n      :null}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Character;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect, useReducer,  useRef, useCallback } from 'react'\r\nimport '../css/Character.css'\r\nimport '../css/Search.css';\r\nimport Loader from './Loader'\r\nimport Search from './Search';\r\nimport Character from './Character'\r\n/**************useReducer*************/\r\nconst initialState = {\r\n  favorites: []\r\n}\r\n\r\nconst favoriteReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_FAVORITE':\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, action.payload]\r\n      };\r\n      case 'REMOVE_FROM_FAVORITES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfavorites: [\r\n\t\t\t\t\t...state.favorites.filter((favorite) => favorite !== action.payload),\r\n\t\t\t\t],\r\n\t\t\t};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\nconst Characters = () => {\r\n\r\n  const [, setResult] = useState([]);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [load, setLoad] = useState('true');\r\n  const [myfavorites, dispatch] = useReducer(favoriteReducer, initialState)\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  // const [isFavorite, setIsFavorite] = useState([]);\r\n\r\n  /**************useREf************************/\r\n  const searchInput = useRef(null);\r\n\r\n  /******* useEffect y useref PARA BUSCADOR ********/\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const handleSearch = useCallback(() => {\r\n    setSearchTerm(searchInput.current.value);\r\n  });\r\n  useEffect(() => {\r\n    const results = searchResults.filter((person) => person.name.toLowerCase().includes(searchTerm));\r\n    setSearchResults(results);\r\n    if (searchTerm === '') {\r\n      setSearchResults(pokemons);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchTerm]);\r\n\r\n/******** BUSCADOR CON USE MEMO***********/\r\n//   const filteredUsers = useMemo(() =>\r\n//   pokemons.filter((user) => {\r\n//     return user.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n//   }),\r\n//   [pokemons, searchTerm]\r\n// )\r\n\r\n\r\n  /****** USE EFFECT En useEffect se pasa una Funcion anonima y variable que va a estar escuhando si no hay una variable sera un arreglo vacio****/\r\n  const arr = [];\r\n  useEffect(() => {\r\n    fetch('https://pokeapi.co/api/v2/pokemon/?limit=500')\r\n    .then((response) => response.json())\r\n    .then((data) => setResult(\r\n    data.results.map((item) => {\r\n      fetch(item.url)\r\n      .then((response) => response.json())\r\n      .then((allpokemon) => arr.push(allpokemon));\r\n      setPokemons(arr);\r\n      setSearchResults(arr);\r\n      dispatch(arr)\r\n      return item.url;\r\n    }),\r\n  ));\r\n  }, []);\r\n  setTimeout(() => {\r\n    setLoad(false);\r\n    }, 1000);\r\n\r\n    const handleFavorite = favorite => {\r\n      // dispatch({ type: 'ADD_TO_FAVORITE', payload: favorite })\r\n      dispatch({\r\n        type: !!isCharacterInFavorites(favorite)\r\n          ? 'REMOVE_FROM_FAVORITES'\r\n          : 'ADD_TO_FAVORITE',\r\n        payload: favorite,\r\n      });\r\n    }\r\n\r\n    // Remover favorito\r\n    const isCharacterInFavorites = (favorite) =>\r\n      myfavorites.favorites.find((character, key) => character.id === favorite.id );\r\n    return (\r\n      <>\r\n        <Search searchTerm={searchTerm} searchInput={searchInput} handleSearch={handleSearch} />\r\n      {/* BUSCADOR CON uSEMEMO */}\r\n      {/* <div className=\"Search\">\r\n        <input type=\"text\" value={searchTerm} onChange={handleChange} />\r\n      </div> */}\r\n      {/*\r\n        {filteredUsers.map(character => (\r\n          <div className=\"item\" key={character.id}>\r\n            <h2>{character.name}</h2>\r\n            <button type=\"button\" onClick={() => handleClick(character)}>Agregar a Favoritos</button>\r\n          </div>\r\n        ))} */}\r\n      <div className= \"\">\r\n      { load ? (\r\n      <Loader />\r\n      ) : (\r\n        <>\r\n          <div className='Characters__favorites'>\r\n          <p className=\"Character__title\">Pokemones favoritos:</p>\r\n\r\n            {myfavorites.favorites.map(favorite => (\r\n              <>\r\n                <div key={favorite.id} >\r\n                  <div className='Characters--favorite'>\r\n                    <img  src={favorite.sprites.front_default} alt='pokemon' />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ))}\r\n          </div>\r\n          {/* LISTADO Y FILTRO DE POKEMONES */}\r\n          <Character \r\n            searchResults={searchResults} \r\n            isCharacterInFavorites={isCharacterInFavorites} \r\n            handleFavorite={handleFavorite} />\r\n        </>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Characters;\r\n\r\n// import React, { useState, useEffect, useReducer } from 'react';\r\n\r\n// const initialState = {\r\n//   favoritesj: []\r\n// }\r\n\r\n// const favoriteReducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case 'ADD_TO_FAVORITE':\r\n//       return {\r\n//         ...state,\r\n//         favoritesj: [...state.favoritesj, action.payload]\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n\r\n// const Characters = () => {\r\n//   const [characters, setCharacters] = useState([]);\r\n//   const [myfavorites, dispatch] = useReducer(favoriteReducer, initialState);\r\n\r\n//   useEffect(() => {\r\n//     fetch('https://rickandmortyapi.com/api/character/')\r\n//       .then(response => response.json())\r\n//       .then(data => setCharacters(data.results));\r\n//   }, []);\r\n\r\n//   const handleClick = favorite => {\r\n//     dispatch({ type: 'ADD_TO_FAVORITE', payload: favorite })\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"Characters\">\r\n\r\n//       {myfavorites.favoritesj.map(favorite => (\r\n//         <li key={favorite.id}>\r\n//           {favorite.name}\r\n//         </li>\r\n//       ))}\r\n\r\n//       {characters.map(character => (\r\n//         <div className=\"item\" key={character.id}>\r\n//           <h2>{character.name}</h2>\r\n//           <button type=\"button\" onClick={() => handleClick(character)}>Agregar a Favoritos</button>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Characters;","// import { useState } from 'react';\n// import Header from './components/Header'\n// import Characters from './components/Characters'\n\n// import './App.css';\n\n// function App() {\n//   const [darkMode, setDarkMode] = useState(false);\n//   let bg = darkMode ? \"bg-dark text-light\" : \"bg-light text-dark\"\n//   return (\n//     <div className={\"App \" + bg}>\n//       <Header \n//        darkMode={darkMode}\n//        onClick={() => setDarkMode(!darkMode)}\n//       />\n//       <Characters />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport './App.css';\nimport Header from './components/Header';\nimport Characters from './components/Characters';\nimport ThemeContext from './context/ThemeContext';\nimport React, { useState } from 'react'\n\n\n\nfunction App() {\n\n  \n  const [darkMode, setDarkMode] = useState(true)\n\n  return (\n    <ThemeContext.Provider value={{darkMode, setDarkMode}}>\n        <div className={darkMode? \"Dark\": \"Light\"}>\n          <Header />\n          <div className=\"Content\">\n            <Characters/>\n          </div>\n        </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport ThemeContext from './context/ThemeContext';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContext.Provider value=\"red\">\n      <App />\n    </ThemeContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}